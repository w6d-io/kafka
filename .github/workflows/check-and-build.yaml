name: Check and build

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: make vet

      - name: Run go fmt check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Install golangci-lint
        run: |
          GOBIN=./bin go install github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: Run golangci-lint
        run: make lint

      - name: Generate manifests and code
        run: |
          make manifests
          make generate

      - name: Run tests
        run: make test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./cover.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  chart-test:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'charts/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Sync CRDs and test charts
        run: |
          make chart-sync-crds
          ct lint --config .github/ct.yaml

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run chart security scan
        run: |
          make chart-security-scan-sarif

      - name: Upload chart security scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: dist/checkov-chart.sarif
          category: helm-charts

  e2e-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Set up Kind
        uses: helm/kind-action@v1
        with:
          cluster_name: kind
          kubectl_version: v1.31.0

      - name: Wait for cluster to be ready
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready nodes --all --timeout=60s

      - name: Install CRDs
        run: make install

      - name: Run e2e tests
        run: make test-e2e

      - name: Test chart installation
        run: |
          make docker-build
          kind load docker-image ghcr.io/w6d-io/kafka:0.1.0 --name kind
          make chart-install
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=kafka-operator --timeout=60s

  build:
    runs-on: ubuntu-latest
    needs: [test, e2e-test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Generate manifests
        run: make manifests

      - name: Build binary
        run: make build

      - name: Build Docker image
        run: make docker-build

      - name: Package chart
        run: make chart-package

      - name: Security scan charts
        run: make chart-security-scan